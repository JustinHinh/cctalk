#!/usr/bin/python
# -*- mode: python -*-
"""
Script to demonstrate coin_messenger functions.
"""
# The python-cctalk package allows one to send ccTalk messages and decode replies from a coin validator. 
license_text = "(C) 2011 David Schryer GNU GPLv3 or later."
__copyright__ = license_text

from cctalk.coin_messenger import CoinMessenger
from cctalk.tools import make_serial_object

def get_coin_type(coin_messenger):       

    # Maps the coin value to the number the coin validator outputs.
    coin_messenger.accept_coins(True)
    data_buffer = coin_messenger.read_buffer()
    
    coin_dic = {4:0.1, 5:0.2, 6:0.50, 7:1, 8:2}
    try:
        coin_type = coin_dic[data_buffer[1]]
    except TypeError:
        return None
    return coin_type
        


coin_validator_connection = make_serial_object('coin_validator')
coin_validator_connection.open()
coin_messenger = CoinMessenger(coin_validator_connection)
    
coin_type = get_coin_type(coin_messenger)

coin_messenger.request('reset_device', verbose=True)
coin_messenger.request('data_storage_availability', verbose=True)
    
coin_messenger.read_buffer()
coin_messenger.set_accept_limit(25)
